syntax = "proto3";

package org.github.transerver.accounts;
option go_package = "github.com/transerver/protos/acctspb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";

service RsaService {
  rpc PublicKey(RsaRequest) returns (google.protobuf.BytesValue) {
    option (google.api.http) =  {
      get: "/rsa/v1/pubkey/{action}/{unique}"
    };
  }

  rpc Unique(google.protobuf.Empty) returns (google.protobuf.StringValue) {
    option (google.api.http) = {
      get: "/unique"
    };
  }
}

message RsaRequest {
  string action = 1 [(validate.rules).string.pattern = "[A-Za-z]+"]; // action is the name of the route to be operated next
  string unique = 2 [(validate.rules).string.pattern = "[A-Za-z0-9_-]+"];
  bool g = 3;
}
