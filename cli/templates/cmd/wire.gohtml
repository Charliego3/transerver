//go:build wireinject
// +build wireinject

package main

import (
	"github.com/google/wire"
	"github.com/transerver/commons"
	"github.com/transerver/commons/configs"
{{- if .UsingETCD }}
	"github.com/transerver/commons/etcds"
{{- end }}
	"github.com/transerver/commons/gs"
	"github.com/transerver/commons/hs"
	"github.com/transerver/commons/logger"
{{- if .UsingRedis }}
	"github.com/transerver/commons/redis"
{{- end }}
)

func wireApp() (*commons.App, func(), error) {
	wire.Build(
		commons.NewApp,
		{{- if .UsingCfgOpt }}
		configs.Parse,
		{{- else }}
		configs.ParseWithoutOpts,
		{{- end }}
		{{- if .UsingETCD }}
			{{- if .UsingETCDOpt }}
				etcds.NewClient,
			{{- else }}
				etcds.NewClientWithoutOpts,
			{{- end }}
		{{- end }}
		{{- if .UsingGRPCOpt }}
		gs.NewGRPCServer,
		{{- else }}
		gs.NewGRPCServerWithoutOpts,
		{{- end }}
		{{- if eq .HsOpt 0 }}
		hs.NewHTTPServerWithOptions,
		{{- else if eq .HsOpt 1 }}
		hs.NewHTTPServerWithoutMuxOpts,
		{{- else }}
		hs.NewHTTPServerWithoutOpts,
		{{- end }}
		{{- if .UsingLogOpt }}
		logger.NewLogger,
		{{- else }}
		logger.NewLoggerWithoutWriter,
		{{- end }}
		{{- if .UsingRedis }}
			{{- if .UsingRedisOpt }}
				redis.NewClient,
			{{- else }}
				redis.NewClientWithoutOpts,
			{{- end }}
		{{- end }}
		providerSet,
	)
	return nil, nil, nil
}
