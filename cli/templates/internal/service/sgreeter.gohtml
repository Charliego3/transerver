package service

import (
	"github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	"{{ .ModURL }}/internal/biz"
	"go.uber.org/zap"
	"google.golang.org/grpc"
)

type {{ .CurrService }}Service struct {
	// TODO: Unimplemented pb
	usecase *biz.{{ .CurrService }}Usecase
	logger  *zap.Logger
}

func New{{ .CurrService }}Service(usecase *biz.{{ .CurrService }}Usecase, logger *zap.Logger) *{{ .CurrService }}Service {
	return &{{ .CurrService }}Service{usecase: usecase, logger: logger}
}

func (g *{{ .CurrService }}Service) RegisterGRPC(s *grpc.Server) {

}

func (g *{{ .CurrService }}Service) RegisterHTTP(s *runtime.ServeMux) error {
	return nil
}
